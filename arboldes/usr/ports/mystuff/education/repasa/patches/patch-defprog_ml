$OpenBSD$
Index: defprog.ml
--- defprog.ml.orig
+++ defprog.ml
@@ -273,7 +273,7 @@ let rec srefword_from_sclassif defname maxw fname 
 			else 
 			begin
 				let format=if (has_attr cl#root "formato") then
-					String.lowercase (attr cl#root "formato")
+					String.lowercase_ascii (attr cl#root "formato")
 				else
 					"texto"
 				in 
@@ -329,7 +329,7 @@ let rec update_meaning fname fordef fdef hw sw=
 			else 
 			begin
 				let format=if (has_attr de#root "formato") then
-					String.lowercase (attr de#root "formato")
+					String.lowercase_ascii (attr de#root "formato")
 				else
 					"texto"
 				in 
@@ -508,7 +508,7 @@ let read_sec (ss:'ext Markup_document.node list) fname
 	        else
         	begin
         		if (has_attr dclassif#root "formato") then
-        			String.lowercase (attr dclassif#root "formato")
+        			String.lowercase_ascii (attr dclassif#root "formato")
         		else
         			"texto"
         	end
@@ -528,7 +528,7 @@ let read_sec (ss:'ext Markup_document.node list) fname
 	else
 	begin
 		if (has_attr ddef#root "formato") then
-			String.lowercase (attr ddef#root "formato")
+			String.lowercase_ascii (attr ddef#root "formato")
 		else
 			"texto"
 	end
@@ -553,7 +553,7 @@ let read_cla hw hsw lsw maxw (classifname,idefname)=
 	        else
         	begin
         		if (has_attr dclassif#root "formato") then
-        			String.lowercase (attr dclassif#root "formato")
+        			String.lowercase_ascii (attr dclassif#root "formato")
         		else
         			"texto"
         	end
@@ -573,7 +573,7 @@ let read_cla hw hsw lsw maxw (classifname,idefname)=
 	else
 	begin
 		if (has_attr ddef#root "formato") then
-			String.lowercase (attr ddef#root "formato")
+			String.lowercase_ascii (attr ddef#root "formato")
 		else
 			"texto"
 	end
@@ -597,7 +597,7 @@ let read_def hw hsw lsw maxw defname=
 	else
 	begin
 		if (has_attr ddef#root "formato") then
-			String.lowercase (attr ddef#root "formato")
+			String.lowercase_ascii (attr ddef#root "formato")
 		else
 			"texto"
 	end
@@ -1362,7 +1362,7 @@ let prep_to_open interf format name =
                 | T_element "secuencia" ->
                         fname:=f;
 		        format:=if (has_attr tc#root "formato") then
-		        	String.lowercase (attr tc#root "formato")
+		        	String.lowercase_ascii (attr tc#root "formato")
         		else
         			"texto";
         		add_arch_ref true ((file_basename name)^".cla") 
@@ -1779,10 +1779,10 @@ let prepareQuestions interf lis=
 * los carácteres que no están en [usedchars] remplazados por espacios. 
 * @author Ugo Enrico Albarello *)
 let ahorcadoArmar response usedchars =
-        let respuesta = (String.make (String.length response) ' ') in
-        for i = 0 to ((String.length respuesta)-1) do
+        let respuesta = (Bytes.make (String.length response) ' ') in
+        for i = 0 to ((Bytes.length respuesta)-1) do
                 if (String.contains usedchars (String.get response i)) then
-                        String.set respuesta i (String.get response i)
+                        Bytes.set respuesta i (String.get response i)
         done;
         respuesta
 ;;

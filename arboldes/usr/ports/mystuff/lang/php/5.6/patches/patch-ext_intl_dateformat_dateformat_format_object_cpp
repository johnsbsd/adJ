$OpenBSD$

Index: ext/intl/dateformat/dateformat_format_object.cpp
--- ext/intl/dateformat/dateformat_format_object.cpp.orig
+++ ext/intl/dateformat/dateformat_format_object.cpp
@@ -33,16 +33,16 @@ extern "C" {
 #include "../common/common_date.h"
 }
 
-static const DateFormat::EStyle valid_styles[] = {
-		DateFormat::kNone,
-		DateFormat::kFull,
-		DateFormat::kLong,
-		DateFormat::kMedium,
-		DateFormat::kShort,
-		DateFormat::kFullRelative,
-		DateFormat::kLongRelative,
-		DateFormat::kMediumRelative,
-		DateFormat::kShortRelative,
+static const icu::DateFormat::EStyle valid_styles[] = {
+		icu::DateFormat::kNone,
+		icu::DateFormat::kFull,
+		icu::DateFormat::kLong,
+		icu::DateFormat::kMedium,
+		icu::DateFormat::kShort,
+		icu::DateFormat::kFullRelative,
+		icu::DateFormat::kLongRelative,
+		icu::DateFormat::kMediumRelative,
+		icu::DateFormat::kShortRelative,
 };
 
 static bool valid_format(zval **z) {
@@ -66,12 +66,12 @@ U_CFUNC PHP_FUNCTION(datefmt_format_object)
 	int					locale_len;
 	bool				pattern		= false;
 	UDate				date;
-	TimeZone			*timeZone	= NULL;
+	icu::TimeZone			*timeZone	= NULL;
 	UErrorCode			status		= U_ZERO_ERROR;
-	DateFormat			*df			= NULL;
-	Calendar			*cal		= NULL;
-	DateFormat::EStyle	dateStyle = DateFormat::kDefault,
-						timeStyle = DateFormat::kDefault;
+	icu::DateFormat			*df			= NULL;
+	icu::Calendar			*cal		= NULL;
+	icu::DateFormat::EStyle	dateStyle = icu::DateFormat::kDefault,
+						timeStyle = icu::DateFormat::kDefault;
 
 	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "o|Zs!",
 			&object, &format, &locale_str, &locale_len) == FAILURE) {
@@ -103,7 +103,7 @@ U_CFUNC PHP_FUNCTION(datefmt_format_object)
 					"element of the array) is not valid", 0 TSRMLS_CC);
 			RETURN_FALSE;
 		}
-		dateStyle = (DateFormat::EStyle)Z_LVAL_PP(z);
+		dateStyle = (icu::DateFormat::EStyle)Z_LVAL_PP(z);
 
 		zend_hash_move_forward_ex(ht, &pos);
 		zend_hash_get_current_data_ex(ht, (void**)&z, &pos);
@@ -113,7 +113,7 @@ U_CFUNC PHP_FUNCTION(datefmt_format_object)
 					"second element of the array) is not valid", 0 TSRMLS_CC);
 			RETURN_FALSE;
 		}
-		timeStyle = (DateFormat::EStyle)Z_LVAL_PP(z);
+		timeStyle = (icu::DateFormat::EStyle)Z_LVAL_PP(z);
 	} else if (Z_TYPE_PP(format) == IS_LONG) {
 		if (!valid_format(format)) {
 			intl_error_set(NULL, U_ILLEGAL_ARGUMENT_ERROR,
@@ -121,7 +121,7 @@ U_CFUNC PHP_FUNCTION(datefmt_format_object)
 					0 TSRMLS_CC);
 			RETURN_FALSE;
 		}
-		dateStyle = timeStyle = (DateFormat::EStyle)Z_LVAL_PP(format);
+		dateStyle = timeStyle = (icu::DateFormat::EStyle)Z_LVAL_PP(format);
 	} else {
 		convert_to_string_ex(format);
 		if (Z_STRLEN_PP(format) == 0) {
@@ -133,11 +133,11 @@ U_CFUNC PHP_FUNCTION(datefmt_format_object)
 	}
 
 	//there's no support for relative time in ICU yet
-	timeStyle = (DateFormat::EStyle)(timeStyle & ~DateFormat::kRelative);
+	timeStyle = (icu::DateFormat::EStyle)(timeStyle & ~icu::DateFormat::kRelative);
 
 	zend_class_entry *instance_ce = Z_OBJCE_P(object);
 	if (instanceof_function(instance_ce, Calendar_ce_ptr TSRMLS_CC)) {
-		Calendar *obj_cal = calendar_fetch_native_calendar(object TSRMLS_CC);
+		icu::Calendar *obj_cal = calendar_fetch_native_calendar(object TSRMLS_CC);
 		if (obj_cal == NULL) {
 			intl_error_set(NULL, U_ILLEGAL_ARGUMENT_ERROR,
 					"datefmt_format_object: bad IntlCalendar instance: "
@@ -159,7 +159,7 @@ U_CFUNC PHP_FUNCTION(datefmt_format_object)
 				"datefmt_format_object" TSRMLS_CC) == FAILURE) {
 			RETURN_FALSE;
 		}
-		cal = new GregorianCalendar(Locale::createFromName(locale_str), status);
+		cal = new icu::GregorianCalendar(icu::Locale::createFromName(locale_str), status);
 		if (U_FAILURE(status)) {
 			intl_error_set(NULL, status,
 					"datefmt_format_object: could not create GregorianCalendar",
@@ -175,10 +175,10 @@ U_CFUNC PHP_FUNCTION(datefmt_format_object)
 	}
 
 	if (pattern) {
-		 df = new SimpleDateFormat(
-				UnicodeString(Z_STRVAL_PP(format), Z_STRLEN_PP(format),
-						UnicodeString::kInvariant),
-				Locale::createFromName(locale_str),
+		 df = new icu::SimpleDateFormat(
+				icu::UnicodeString(Z_STRVAL_PP(format), Z_STRLEN_PP(format),
+						icu::UnicodeString::kInvariant),
+				icu::Locale::createFromName(locale_str),
 				status);
 
 		if (U_FAILURE(status)) {
@@ -189,8 +189,8 @@ U_CFUNC PHP_FUNCTION(datefmt_format_object)
 			goto cleanup;
 		}
 	} else {
-		df = DateFormat::createDateTimeInstance(dateStyle, timeStyle,
-				Locale::createFromName(locale_str));
+		df = icu::DateFormat::createDateTimeInstance(dateStyle, timeStyle,
+				icu::Locale::createFromName(locale_str));
 
 		if (df == NULL) { /* according to ICU sources, this should never happen */
 			intl_error_set(NULL, status,
@@ -208,7 +208,7 @@ U_CFUNC PHP_FUNCTION(datefmt_format_object)
 	timeZone = NULL;
 
 	{
-		UnicodeString result = UnicodeString();
+		icu::UnicodeString result = icu::UnicodeString();
 		df->format(date, result);
 
 		Z_TYPE_P(return_value) = IS_STRING;

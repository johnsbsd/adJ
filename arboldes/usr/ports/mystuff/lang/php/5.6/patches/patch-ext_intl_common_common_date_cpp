$OpenBSD$

Index: ext/intl/common/common_date.cpp
--- ext/intl/common/common_date.cpp.orig
+++ ext/intl/common/common_date.cpp
@@ -35,7 +35,7 @@ extern "C" {
 
 /* {{{ timezone_convert_datetimezone
  *      The timezone in DateTime and DateTimeZone is not unified. */
-U_CFUNC TimeZone *timezone_convert_datetimezone(int type,
+U_CFUNC icu::TimeZone *timezone_convert_datetimezone(int type,
 												void *object,
 												int is_datetime,
 												intl_error *outside_error,
@@ -45,7 +45,7 @@ U_CFUNC TimeZone *timezone_convert_datetimezone(int ty
 				offset_id[] = "GMT+00:00";
 	int			id_len = 0;
 	char		*message;
-	TimeZone	*timeZone;
+	icu::TimeZone	*timeZone;
 
 	switch (type) {
 		case TIMELIB_ZONETYPE_ID:
@@ -84,15 +84,15 @@ U_CFUNC TimeZone *timezone_convert_datetimezone(int ty
 			break;
 	}
 
-	UnicodeString s = UnicodeString(id, id_len, US_INV);
-	timeZone = TimeZone::createTimeZone(s);
+	icu::UnicodeString s = icu::UnicodeString(id, id_len, US_INV);
+	timeZone = icu::TimeZone::createTimeZone(s);
 #if U_ICU_VERSION_MAJOR_NUM >= 49
-	if (*timeZone == TimeZone::getUnknown()) {
+	if (*timeZone == icu::TimeZone::getUnknown()) {
 #else
-	UnicodeString resultingId;
+	icu::UnicodeString resultingId;
 	timeZone->getID(resultingId);
-	if (resultingId == UnicodeString("Etc/Unknown", -1, US_INV)
-			|| resultingId == UnicodeString("GMT", -1, US_INV)) {
+	if (resultingId == icu::UnicodeString("Etc/Unknown", -1, US_INV)
+			|| resultingId == icu::UnicodeString("GMT", -1, US_INV)) {
 #endif
 		spprintf(&message, 0, "%s: time zone id '%s' "
 			"extracted from ext/date DateTimeZone not recognized", func, id);
@@ -106,7 +106,7 @@ U_CFUNC TimeZone *timezone_convert_datetimezone(int ty
 }
 /* }}} */
 
-U_CFUNC int intl_datetime_decompose(zval *z, double *millis, TimeZone **tz,
+U_CFUNC int intl_datetime_decompose(zval *z, double *millis, icu::TimeZone **tz,
 		intl_error *err, const char *func TSRMLS_DC)
 {
 	zval	retval;
@@ -155,7 +155,7 @@ U_CFUNC int intl_datetime_decompose(zval *z, double *m
 			return FAILURE;
 		}
 		if (!datetime->time->is_localtime) {
-			*tz = TimeZone::getGMT()->clone();
+			*tz = icu::TimeZone::getGMT()->clone();
 		} else {
 			*tz = timezone_convert_datetimezone(datetime->time->zone_type,
 				datetime, 1, NULL, func TSRMLS_CC);

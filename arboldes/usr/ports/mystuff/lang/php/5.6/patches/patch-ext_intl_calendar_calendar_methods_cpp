$OpenBSD$

Index: ext/intl/calendar/calendar_methods.cpp
--- ext/intl/calendar/calendar_methods.cpp.orig
+++ ext/intl/calendar/calendar_methods.cpp
@@ -52,7 +52,7 @@ U_CFUNC PHP_FUNCTION(intlcal_create_instance)
 	zval		**zv_timezone	= NULL;
 	const char	*locale_str		= NULL;
 	int			dummy;
-	TimeZone	*timeZone;
+	icu::TimeZone	*timeZone;
 	UErrorCode	status			= U_ZERO_ERROR;
 	intl_error_reset(NULL TSRMLS_CC);
 
@@ -73,8 +73,8 @@ U_CFUNC PHP_FUNCTION(intlcal_create_instance)
 		locale_str = intl_locale_get_default(TSRMLS_C);
 	}
 
-	Calendar *cal = Calendar::createInstance(timeZone,
-		Locale::createFromName(locale_str), status);
+	icu::Calendar *cal = icu::Calendar::createInstance(timeZone,
+		icu::Locale::createFromName(locale_str), status);
 	if (cal == NULL) {
 		delete timeZone;
 		intl_error_set(NULL, status, "Error creating ICU Calendar object", 0 TSRMLS_CC);
@@ -85,7 +85,7 @@ U_CFUNC PHP_FUNCTION(intlcal_create_instance)
 }
 
 #if U_ICU_VERSION_MAJOR_NUM * 10 + U_ICU_VERSION_MINOR_NUM >= 42
-class BugStringCharEnumeration : public StringEnumeration
+class BugStringCharEnumeration : public icu::StringEnumeration
 {
 public:
 	BugStringCharEnumeration(UEnumeration* _uenum) : uenum(_uenum) {}
@@ -99,7 +99,7 @@ class BugStringCharEnumeration : public StringEnumerat
 		return uenum_count(uenum, &status);
 	}
 
-	virtual const UnicodeString* snext(UErrorCode& status)
+	virtual const icu::UnicodeString* snext(UErrorCode& status)
 	{
 		int32_t length;
 		const UChar* str = uenum_unext(uenum, &length, &status);
@@ -175,7 +175,7 @@ U_CFUNC PHP_FUNCTION(intlcal_get_keyword_values_for_lo
         RETURN_FALSE;
     }
 
-    StringEnumeration *se = new BugStringCharEnumeration(uenum);
+    icu::StringEnumeration *se = new BugStringCharEnumeration(uenum);
 #endif
 
 	IntlIterator_from_StringEnumeration(se, return_value TSRMLS_CC);
@@ -192,7 +192,7 @@ U_CFUNC PHP_FUNCTION(intlcal_get_now)
 		RETURN_FALSE;
 	}
 
-	RETURN_DOUBLE((double)Calendar::getNow());
+	RETURN_DOUBLE((double)icu::Calendar::getNow());
 }
 
 U_CFUNC PHP_FUNCTION(intlcal_get_available_locales)
@@ -206,16 +206,16 @@ U_CFUNC PHP_FUNCTION(intlcal_get_available_locales)
 	}
 
 	int32_t count;
-	const Locale *availLocales = Calendar::getAvailableLocales(count);
+	const icu::Locale *availLocales = icu::Calendar::getAvailableLocales(count);
 	array_init(return_value);
 	for (int i = 0; i < count; i++) {
-		Locale locale = availLocales[i];
+		icu::Locale locale = availLocales[i];
 		add_next_index_string(return_value, locale.getName(), 1);
 	}
 }
 
 static void _php_intlcal_field_uec_ret_in32t_method(
-		int32_t (Calendar::*func)(UCalendarDateFields, UErrorCode&) const,
+		int32_t (icu::Calendar::*func)(UCalendarDateFields, UErrorCode&) const,
 		const char *method_name,
 		INTERNAL_FUNCTION_PARAMETERS)
 {
@@ -249,7 +249,7 @@ static void _php_intlcal_field_uec_ret_in32t_method(
 
 U_CFUNC PHP_FUNCTION(intlcal_get)
 {
-	_php_intlcal_field_uec_ret_in32t_method(&Calendar::get,
+	_php_intlcal_field_uec_ret_in32t_method(&icu::Calendar::get,
 		"intlcal_get", INTERNAL_FUNCTION_PARAM_PASSTHRU);
 }
 
@@ -328,7 +328,7 @@ U_CFUNC PHP_FUNCTION(intlcal_add)
 U_CFUNC PHP_FUNCTION(intlcal_set_time_zone)
 {
 	zval			*zv_timezone;
-	TimeZone		*timeZone;
+	icu::TimeZone		*timeZone;
 	CALENDAR_METHOD_INIT_VARS;
 
 	if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(),
@@ -357,7 +357,7 @@ U_CFUNC PHP_FUNCTION(intlcal_set_time_zone)
 
 
 static void _php_intlcal_before_after(
-		UBool (Calendar::*func)(const Calendar&, UErrorCode&) const,
+		UBool (icu::Calendar::*func)(const icu::Calendar&, UErrorCode&) const,
 		INTERNAL_FUNCTION_PARAMETERS)
 {
 	zval			*when_object;
@@ -390,12 +390,12 @@ static void _php_intlcal_before_after(
 
 U_CFUNC PHP_FUNCTION(intlcal_after)
 {
-	_php_intlcal_before_after(&Calendar::after, INTERNAL_FUNCTION_PARAM_PASSTHRU);
+	_php_intlcal_before_after(&icu::Calendar::after, INTERNAL_FUNCTION_PARAM_PASSTHRU);
 }
 
 U_CFUNC PHP_FUNCTION(intlcal_before)
 {
-	_php_intlcal_before_after(&Calendar::before, INTERNAL_FUNCTION_PARAM_PASSTHRU);
+	_php_intlcal_before_after(&icu::Calendar::before, INTERNAL_FUNCTION_PARAM_PASSTHRU);
 }
 
 U_CFUNC PHP_FUNCTION(intlcal_set)
@@ -602,13 +602,13 @@ U_CFUNC PHP_FUNCTION(intlcal_field_difference)
 
 U_CFUNC PHP_FUNCTION(intlcal_get_actual_maximum)
 {
-	_php_intlcal_field_uec_ret_in32t_method(&Calendar::getActualMaximum,
+	_php_intlcal_field_uec_ret_in32t_method(&icu::Calendar::getActualMaximum,
 		"intlcal_get_actual_maximum", INTERNAL_FUNCTION_PARAM_PASSTHRU);
 }
 
 U_CFUNC PHP_FUNCTION(intlcal_get_actual_minimum)
 {
-	_php_intlcal_field_uec_ret_in32t_method(&Calendar::getActualMinimum,
+	_php_intlcal_field_uec_ret_in32t_method(&icu::Calendar::getActualMinimum,
 		"intlcal_get_actual_minimum", INTERNAL_FUNCTION_PARAM_PASSTHRU);
 }
 
@@ -663,7 +663,7 @@ U_CFUNC PHP_FUNCTION(intlcal_get_first_day_of_week)
 }
 
 static void _php_intlcal_field_ret_in32t_method(
-		int32_t (Calendar::*func)(UCalendarDateFields) const,
+		int32_t (icu::Calendar::*func)(UCalendarDateFields) const,
 		const char *method_name,
 		INTERNAL_FUNCTION_PARAMETERS)
 {
@@ -696,13 +696,13 @@ static void _php_intlcal_field_ret_in32t_method(
 
 U_CFUNC PHP_FUNCTION(intlcal_get_greatest_minimum)
 {
-	_php_intlcal_field_ret_in32t_method(&Calendar::getGreatestMinimum,
+	_php_intlcal_field_ret_in32t_method(&icu::Calendar::getGreatestMinimum,
 		"intlcal_get_greatest_minimum", INTERNAL_FUNCTION_PARAM_PASSTHRU);
 }
 
 U_CFUNC PHP_FUNCTION(intlcal_get_least_maximum)
 {
-	_php_intlcal_field_ret_in32t_method(&Calendar::getLeastMaximum,
+	_php_intlcal_field_ret_in32t_method(&icu::Calendar::getLeastMaximum,
 		"intlcal_get_least_maximum", INTERNAL_FUNCTION_PARAM_PASSTHRU);
 }
 
@@ -726,7 +726,7 @@ U_CFUNC PHP_FUNCTION(intlcal_get_locale)
 
 	CALENDAR_METHOD_FETCH_OBJECT;
 
-	Locale locale = co->ucal->getLocale((ULocDataLocaleType)locale_type,
+	icu::Locale locale = co->ucal->getLocale((ULocDataLocaleType)locale_type,
 		CALENDAR_ERROR_CODE(co));
 	INTL_METHOD_CHECK_STATUS(co,
 		"intlcal_get_locale: Call to ICU method has failed");
@@ -736,7 +736,7 @@ U_CFUNC PHP_FUNCTION(intlcal_get_locale)
 
 U_CFUNC PHP_FUNCTION(intlcal_get_maximum)
 {
-	_php_intlcal_field_ret_in32t_method(&Calendar::getMaximum,
+	_php_intlcal_field_ret_in32t_method(&icu::Calendar::getMaximum,
 		"intlcal_get_maximum", INTERNAL_FUNCTION_PARAM_PASSTHRU);
 }
 
@@ -762,7 +762,7 @@ U_CFUNC PHP_FUNCTION(intlcal_get_minimal_days_in_first
 
 U_CFUNC PHP_FUNCTION(intlcal_get_minimum)
 {
-	_php_intlcal_field_ret_in32t_method(&Calendar::getMinimum,
+	_php_intlcal_field_ret_in32t_method(&icu::Calendar::getMinimum,
 		"intlcal_get_minimum", INTERNAL_FUNCTION_PARAM_PASSTHRU);
 }
 
@@ -779,7 +779,7 @@ U_CFUNC PHP_FUNCTION(intlcal_get_time_zone)
 
 	CALENDAR_METHOD_FETCH_OBJECT;
 
-	TimeZone *tz = co->ucal->getTimeZone().clone();
+	icu::TimeZone *tz = co->ucal->getTimeZone().clone();
 	if (tz == NULL) {
 		intl_errors_set(CALENDAR_ERROR_P(co), U_MEMORY_ALLOCATION_ERROR,
 			"intlcal_get_time_zone: could not clone TimeZone", 0 TSRMLS_CC);
@@ -1145,9 +1145,9 @@ U_CFUNC PHP_FUNCTION(intlcal_from_date_time)
 	php_date_obj	*datetime;
 	char			*locale_str			= NULL;
 	int				locale_str_len;
-	TimeZone		*timeZone;
+	icu::TimeZone		*timeZone;
 	UErrorCode		status				= U_ZERO_ERROR;
-	Calendar        *cal;
+	icu::Calendar        *cal;
 	intl_error_reset(NULL TSRMLS_CC);
 
 	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "Z|s!",
@@ -1189,7 +1189,7 @@ U_CFUNC PHP_FUNCTION(intlcal_from_date_time)
 	}
 
 	if (!datetime->time->is_localtime) {
-		timeZone = TimeZone::getGMT()->clone();
+		timeZone = icu::TimeZone::getGMT()->clone();
 	} else {
 		timeZone = timezone_convert_datetimezone(datetime->time->zone_type,
 			datetime, 1, NULL, "intlcal_from_date_time" TSRMLS_CC);
@@ -1202,8 +1202,8 @@ U_CFUNC PHP_FUNCTION(intlcal_from_date_time)
 		locale_str = const_cast<char*>(intl_locale_get_default(TSRMLS_C));
 	}
 
-	cal = Calendar::createInstance(timeZone,
-		Locale::createFromName(locale_str), status);
+	cal = icu::Calendar::createInstance(timeZone,
+		icu::Locale::createFromName(locale_str), status);
 	if (cal == NULL) {
 		delete timeZone;
 		intl_error_set(NULL, status, "intlcal_from_date_time: "
@@ -1267,7 +1267,7 @@ U_CFUNC PHP_FUNCTION(intlcal_to_date_time)
 	ZVAL_STRINGL(&ts_zval, ts_str, ts_str_len, 0);
 
 	/* Now get the time zone */
-	const TimeZone& tz = co->ucal->getTimeZone();
+	const icu::TimeZone& tz = co->ucal->getTimeZone();
 	zval *timezone_zval = timezone_convert_to_datetimezone(
 		&tz, CALENDAR_ERROR_P(co), "intlcal_to_date_time" TSRMLS_CC);
 	if (timezone_zval == NULL) {
